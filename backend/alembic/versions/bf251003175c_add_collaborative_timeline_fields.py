"""add collaborative timeline fields

Revision ID: bf251003175c
Revises: bbb1effe3beb
Create Date: 2025-05-28 19:06:47.942254

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'bf251003175c'
down_revision: Union[str, None] = 'bbb1effe3beb'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('properties', sa.Column('timeline_approved_by_buyer_solicitor', sa.Boolean(), nullable=False, server_default='0'))
    op.add_column('properties', sa.Column('timeline_approved_by_seller_solicitor', sa.Boolean(), nullable=False, server_default='0'))
    op.add_column('properties', sa.Column('timeline_locked', sa.Boolean(), nullable=False, server_default='0'))
    op.add_column('property_stages', sa.Column('is_draft', sa.Boolean(), nullable=False, server_default='1'))
    op.add_column('property_stages', sa.Column('order', sa.Integer(), nullable=False, server_default='0'))
    op.add_column('property_stages', sa.Column('responsible_role', sa.String(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('property_stages', 'responsible_role')
    op.drop_column('property_stages', 'order')
    op.drop_column('property_stages', 'is_draft')
    op.drop_column('properties', 'timeline_locked')
    op.drop_column('properties', 'timeline_approved_by_seller_solicitor')
    op.drop_column('properties', 'timeline_approved_by_buyer_solicitor')
    # ### end Alembic commands ###
